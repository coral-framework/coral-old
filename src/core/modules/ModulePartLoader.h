/*
 * Coral - Lightweight C++ Component Framework
 * See Copyright Notice in Coral.h
 */

#ifndef _MODULEPARTLOADER_H_
#define _MODULEPARTLOADER_H_

#include "ModulePartLoader_Base.h"

namespace co {

// forward declarations:
class Library;
class INamespace;
struct TypeDependency;
struct BootstrapFunctions;

/*!
	Default implementation of co.IModulePartLoader, which dynamically loads
	libraries built from code generated by the Coral Compiler.
 */
class ModulePartLoader : public ModulePartLoader_Base
{
public:
	ModulePartLoader();
	virtual ~ModulePartLoader();

	// IModulePartLoader methods:
	bool canLoadModulePart( const std::string& moduleName );
	IModulePart* loadModulePart( const std::string& moduleName );

private:
	bool locateModuleLibrary( const std::string& moduleName, std::string* filename = 0 );
	void resolveModuleFunctions( Library* lib, BootstrapFunctions& bf );
	bool checkVerificationData( const std::string& data );
	void checkTypeDependencies( const TypeDependency* td );
};

} // namespace co

#endif
