/*
	Namespaces contain types and child namespaces and are the inner nodes of the
	type repository tree. A namespace will generally correspond to a directory
	(or several, see below) in the Coral path, although this is not enforced.

	Whenever the Coral path specifies multiple root directories, a namespace may
	span several directories&mdash;with the same relative path, but different roots.

	The root (aka \e global) namespace is in the \ref ISystem::types "system's type manager".
 */
interface INamespace
{
	// The namespace's local name (or "", if this is the root namespace).
	readonly string name;

	// The namespace's fully qualified name (or "", if this is the root namespace).
	readonly string fullName;

	// The namespace's parent namespace (or null, if this is the root namespace).
	readonly INamespace parentNamespace;

	// List of child namespaces.
	readonly INamespace[] childNamespaces;

	// List of types defined in this namespace.
	readonly IType[] types;

	// The namespace's module, if one was loaded (otherwise, null).
	readonly IModule module;

	/*
		Searches this namespace for a loaded type with the given \a name (case sensitive).
		Returns null if there is no type in this namespace with the given \a name.
	 */
	IType findType( in string name );

	/*
		Searches this namespace for a child namespace with the given \a name (case sensitive).
		Returns null if there is no child namespace with the given \a name.
	 */
	INamespace findChildNamespace( in string name );

	/*
		Creates an ITypeBuilder to define a type in this namespace.

		\throw IllegalNameException if \a name is not a valid identifier.
		\throw IllegalNameException if \a name clashes with an existing type or child namespace.
		\throw IllegalArgumentException if \a kind does not indicate a user-definable type.
	 */
	ITypeBuilder defineType( in string name, in TypeKind kind )
		raises IllegalNameException, IllegalArgumentException;

	/*
		Creates a child namespace with the specified \a name.

		\throw IllegalNameException if \a name is not a valid identifier.
		\throw IllegalNameException if \a name clashes with an existing type or child namespace.
	 */
	INamespace defineChildNamespace( in string name ) raises IllegalNameException;
};
