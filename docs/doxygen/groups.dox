/*!

\defgroup functional Functional Groups
\brief List of functional groups of Coral classes and functions.

Please note that this list is currently incomplete.
At least the following groups are still missing:
- Type Introspection
- Type Creation
- Reflection
- Modules
- Services

@{
	\defgroup setup System Setup and Shutdown
	\brief Functions to setup and teardown the Coral framework.

	The framework is initialized when getSystem() is called for the first time, and the
	initialization will fail unless the Coral Path contains at least the <tt>'co'</tt> module.

	If you are writing your own executable, the Coral Path is empty by default.
	You must call addPath() to setup the Coral Path before the first call to getSystem().

	Please note that you generally don't have to worry about setting up the system nor the Coral Path
	when using the Coral Application Launcher.

	@{
	@}

	\defgroup convenience Convenience Functions and Macros
	\brief Miscellaneous functions and macros, just for your convenience and productivity.
	@{
		\def CORAL_STATIC_CHECK
		\def CORAL_ARRAY_LENGTH
	@}

	\defgroup platform Platform Abstraction
	\brief Types and macros to help you write platform-independent code.
	@{
		\def USING_CORAL_INTEGER_TYPES
		\def CORAL_INT64_C
		\def CORAL_UINT64_C
		\def CORAL_UNUSED
		\def CORAL_FORCE_INLINE
		\def CORAL_NO_INLINE
	@}

	\defgroup debugevents Debug Events API
	\brief A very simple API to send debug messages in a portable and non-intrusive way.

	This API is intended for situations where it is impossible (or it does not make sense) to throw an exception.

	Messages are sent using the debug() function, and can be handled by a user-defined callback function
	(see installDebugEventHandler()). By default, all messages are printed to <tt>stderr</tt>.

	@{
	@}
@}

*/